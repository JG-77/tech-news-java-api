#First we pick a port--> we'll use 8082
server.port=8082
# The next variable will be the data source URL
#First we specify the jdbc as mysql, then provide a string of parameters for the MySQL connection
#We'll be testing locally, so we pass in localhost and what we want to name the database, localhost:3306/just_tech_news_java_db
#We'll chain parameters, starting with useSSL set to false; the serverTimezone will be UTC;
# and most importantly, we want to create the database if it doesn't exist, so we pass createDatabaseIfNotExist=true
spring.datasource.url=jdbc:mysql://localhost:3306/just_tech_news_java_db?useSSL=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
#need to change the username and password to whatever is set up on YOUR machine
# you'll need to set up the way the schema tools will manipulate the database at startup
spring.datasource.username=root
# MySQL server pw
spring.datasource.password=mysql_native_password
  # Je$ter7798$code
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#store-type as jdbc, stating that we want to initialize the schema every time we start up the session
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
#set timeout to six seconds for this example
spring.session.timeout.seconds=600
#H2 console, an embedded GUI console for browsing the contents of a database and running the queries
spring.h2.console.enabled=true